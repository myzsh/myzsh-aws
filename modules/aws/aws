[ -f "$AWSPATH/.tmp_creds" ] && source "$AWSPATH/.tmp_creds"

function aws(){
	local verb="$1"

	case "$verb" in
	clearcreds)
		for line in $(env | grep '^AWS_'); do
			local name=$(echo $line | cut -d "=" -f 1)
			unset "$name"
		done
	;;
	loadcreds)
		if [ $# -eq 1 ]; then
			myzsh error "Missing profile to load"
			return 1
		fi

		local profile="$2"
		for line in $(sed -n "/\[$profile\]/,/^\[/p" "$HOME/.aws/credentials" | grep -v '^\[.*\]$' | tr -d ' '); do
			local name=$(echo $line | cut -d "=" -f 1 | tr '[:lower:]' '[:upper:]')
			local value=$(echo $line | cut -d "=" -f 2)
			export "$name=$value"
		done
	;;
	mfauth)
		local token
		while ! [[ "$token" =~ ^[0-9]+$ ]]; do
			vared -p 'MFA Token: ' -c token
			! [[ "$token" =~ ^[0-9]+$ ]] && token=""
		done

		unset AWS_SECRET_ACCESS_KEY
		unset AWS_ACCESS_KEY_ID
		unset AWS_SESSION_TOKEN
		local output=$(command aws sts get-session-token --serial-number "$AWS_MFA_ARN" --token-code "$token")

		local secret_access_key=$(echo $output | grep "SecretAccessKey" | cut -d ":" -f 2 | sed -e 's/^\ *"//' -e 's/",*\ *$//')
		local access_key=$(echo $output | grep "AccessKeyId" | cut -d ":" -f 2 | sed -e 's/^\ *"//' -e 's/",*\ *$//')
		local session_token=$(echo $output | grep "SessionToken" | cut -d ":" -f 2 | sed -e 's/^\ *"//' -e 's/",*\ *$//')

		if [ -n "$secret_access_key" ] || [ -n "$access_key" ] || [ -n "$session_token" ]; then
			export AWS_SECRET_ACCESS_KEY="$secret_access_key"
			export AWS_ACCESS_KEY_ID="$access_key"
			export AWS_SESSION_TOKEN="$session_token"

			echo "export AWS_SECRET_ACCESS_KEY=\"$secret_access_key\"" > "$AWSPATH/.tmp_creds"
			echo "export AWS_ACCESS_KEY_ID=\"$access_key\"" >> "$AWSPATH/.tmp_creds"
			echo "export AWS_SESSION_TOKEN=\"$session_token\"" >> "$AWSPATH/.tmp_creds"
		fi
	;;
	*)
		command aws "$@"
	;;
	esac
}

# vim: filetype=zsh noexpandtab
